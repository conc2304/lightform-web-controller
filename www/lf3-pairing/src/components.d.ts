/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { LfKeyboardBlurDirection } from "./components/lf-keyboard/lf-keyboard-blur-direction.enum";
import { SignalStrength } from "./shared/enums/wifi-signal-strength.enum";
export namespace Components {
    interface AppHome {
    }
    interface AppProfile {
        "name": string;
    }
    interface AppRoot {
    }
    interface LfKeyboard {
        "blurDirection"?: LfKeyboardBlurDirection;
        "keyNavigationEnabled"?: boolean;
        "wrapNavigation": boolean;
    }
    interface LfWifiConnecting {
        "propName": string;
        "publicMethod": () => Promise<void>;
    }
    interface LfWifiList {
    }
    interface LfWifiListItem {
        "focusElem"?: boolean;
        "index"?: number;
        "networkName": string;
        "passwordProtected": boolean;
        "signalStrength": SignalStrength;
    }
    interface LfWifiPassword {
        "networkName": string;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLLfKeyboardElement extends Components.LfKeyboard, HTMLStencilElement {
    }
    var HTMLLfKeyboardElement: {
        prototype: HTMLLfKeyboardElement;
        new (): HTMLLfKeyboardElement;
    };
    interface HTMLLfWifiConnectingElement extends Components.LfWifiConnecting, HTMLStencilElement {
    }
    var HTMLLfWifiConnectingElement: {
        prototype: HTMLLfWifiConnectingElement;
        new (): HTMLLfWifiConnectingElement;
    };
    interface HTMLLfWifiListElement extends Components.LfWifiList, HTMLStencilElement {
    }
    var HTMLLfWifiListElement: {
        prototype: HTMLLfWifiListElement;
        new (): HTMLLfWifiListElement;
    };
    interface HTMLLfWifiListItemElement extends Components.LfWifiListItem, HTMLStencilElement {
    }
    var HTMLLfWifiListItemElement: {
        prototype: HTMLLfWifiListItemElement;
        new (): HTMLLfWifiListItemElement;
    };
    interface HTMLLfWifiPasswordElement extends Components.LfWifiPassword, HTMLStencilElement {
    }
    var HTMLLfWifiPasswordElement: {
        prototype: HTMLLfWifiPasswordElement;
        new (): HTMLLfWifiPasswordElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "lf-keyboard": HTMLLfKeyboardElement;
        "lf-wifi-connecting": HTMLLfWifiConnectingElement;
        "lf-wifi-list": HTMLLfWifiListElement;
        "lf-wifi-list-item": HTMLLfWifiListItemElement;
        "lf-wifi-password": HTMLLfWifiPasswordElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppProfile {
        "name"?: string;
    }
    interface AppRoot {
    }
    interface LfKeyboard {
        "blurDirection"?: LfKeyboardBlurDirection;
        "keyNavigationEnabled"?: boolean;
        "onBlurLfKeyboard"?: (event: CustomEvent<any>) => void;
        "onSubmitButtonPressed"?: (event: CustomEvent<any>) => void;
        "onVirtualKeyboardKeyPressed"?: (event: CustomEvent<any>) => void;
        "wrapNavigation"?: boolean;
    }
    interface LfWifiConnecting {
        "onRestartPairingProcess"?: (event: CustomEvent<any>) => void;
        "propName"?: string;
    }
    interface LfWifiList {
        "onNetworkSelected"?: (event: CustomEvent<any>) => void;
    }
    interface LfWifiListItem {
        "focusElem"?: boolean;
        "index"?: number;
        "networkName": string;
        "passwordProtected": boolean;
        "signalStrength": SignalStrength;
    }
    interface LfWifiPassword {
        "networkName"?: string;
        "onPasswordSubmitted"?: (event: CustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "lf-keyboard": LfKeyboard;
        "lf-wifi-connecting": LfWifiConnecting;
        "lf-wifi-list": LfWifiList;
        "lf-wifi-list-item": LfWifiListItem;
        "lf-wifi-password": LfWifiPassword;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "lf-keyboard": LocalJSX.LfKeyboard & JSXBase.HTMLAttributes<HTMLLfKeyboardElement>;
            "lf-wifi-connecting": LocalJSX.LfWifiConnecting & JSXBase.HTMLAttributes<HTMLLfWifiConnectingElement>;
            "lf-wifi-list": LocalJSX.LfWifiList & JSXBase.HTMLAttributes<HTMLLfWifiListElement>;
            "lf-wifi-list-item": LocalJSX.LfWifiListItem & JSXBase.HTMLAttributes<HTMLLfWifiListItemElement>;
            "lf-wifi-password": LocalJSX.LfWifiPassword & JSXBase.HTMLAttributes<HTMLLfWifiPasswordElement>;
        }
    }
}
