@import "../../_common/mixins";

// Button
// --------------------------------------------------

:host {
  /**
   * @prop --border-radius: Border radius size
   * @prop --border-width: Width of border
   */

  --border-radius: 4px;
  --border-radius: 4px;
  --border-width: 0px;

  display: inline-flex;
  box-sizing: border-box;
  cursor: pointer;
  border-radius: var(--border-radius);
  border-width: var(--border-width);
  transition-duration: 0.28s;
  transition-property: box-shadow, transform, opacity, background-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  padding: 0.5rem;
}

:host .native-element {
  @include atlas-regular();

  box-sizing: border-box;
  background-color: unset;
  color: $color-brand-lf-white-base;
  border-style: none;
  appearance: none;
  align-items: center;
  border-radius: unset;
  display: inline-flex;
  flex: 0 0 auto;
  letter-spacing: 0.09em;
  justify-content: center;
  outline: 0;
  position: relative;
  text-decoration: none;
  text-indent: 0.09em;
  text-transform: uppercase;

  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  appearance: none;
  width: 100%;
  height: 100%;
  cursor: pointer;

  &:disabled {
    pointer-events: none;
  }
}

.lf-button--content {
  display: flex;
  position: relative;
  flex-flow: row nowrap;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  z-index: 1;
}

//  BUTTON CONTEXT TYPES - Color/States
// --------------------------------------------------

// Primary
// --------------------------------------------------
:host(lf-button.lf-button--context-primary) {
  background-color: $color-brand-lf-green-base;
  opacity: 1;
}

:host(lf-button.lf-button--context-primary:hover:not(.lf-button--disabled)) {
  background-color: $color-brand-lf-green-light;
}

:host(lf-button.lf-button--context-primary:active:not(.lf-button--disabled)) {
  background-color: $color-brand-lf-green-bright;
}

// Secondary
// --------------------------------------------------
:host(lf-button.lf-button--context-secondary) {
  background-color: $color-brand-lf-gray-light;
  opacity: 1;
}

:host(lf-button.lf-button--context-secondary:hover:not(.lf-button--disabled)) {
  background-color: $color-brand-lf-green-light;
}

:host(lf-button.lf-button--context-secondary:active:not(.lf-button--disabled)) {
  background-color: $color-brand-lf-green-bright;
}

// UI
// --------------------------------------------------
:host(lf-button.lf-button--context-ui) {
  background-color: $color-brand-lf-gray-light;
  opacity: 1;
}

:host(lf-button.lf-button--context-ui:hover:not(.lf-button--disabled)) {
  background-color: $color-brand-lf-gray-dark;
}

:host(lf-button.lf-button--context-ui:active:not(.lf-button--disabled)) {
  background-color: $color-brand-lf-blue-dark;
}

// Disabled
// --------------------------------------------------
:host(lf-button.lf-button--disabled) {
  opacity: 0.5;
  pointer-events: none;
}

// LF Button Sizes
// --------------------------------------------------
:host(lf-button.lf-button--size-x-large) {
  height: 2.8rem;
  min-width: 7.3rem;

  .slot--wrapper {
    font-size: 1.3rem;
  }

  &.lf-button--context-ui {
    height: 2.55rem;
  }
}

:host(lf-button.lf-button--size-large) {
  height: 2.4rem;
  min-width: 6.2rem;

  .slot--wrapper {
    font-size: 1.1rem;
  }

  &.lf-button--context-ui {
    height: 2.15rem;
  }
}

:host(lf-button.lf-button--size-regular) {
  height: 2rem;
  min-width: 5.2rem;

  .slot--wrapper {
    font-size: 1rem;
  }

  &.lf-button--context-ui {
    height: 1.75rem;
  }
}

:host(lf-button.lf-button--size-small) {
  height: 1.6rem;
  min-width: 4rem;

  .slot--wrapper {
    font-size: 0.666rem;
  }

  &.lf-button--context-ui {
    height: 1.35rem;
  }
}

:host(lf-button.lf-button--size-x-small) {
  height: 1.2rem;
  min-width: 3rem;

  .slot--wrapper {
    font-size: 0.5rem;
  }

  &.lf-button--context-ui {
    height: 0.95rem;
  }
}

// Button Icons
// --------------------------------------------------

::slotted(*) {
  margin: initial;
  padding: 0 0.2rem;
}

::slotted(img) {
  font-size: 1.4rem;
  pointer-events: none;
  align-self: center;
}

::slotted(img[slot="start"]) {
  margin: 0 0.3rem 0 -0.3rem;
}

::slotted(img[slot="end"]) {
  margin: 0 0.2rem 0 -0.1rem;
}
