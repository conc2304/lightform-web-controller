@import "../../_common/mixins";

// Local Scss Variables
// --------------------------------------------------
$inputFontSize: 16px;
$labelFontSize: 14px;

// LF Input
// --------------------------------------------------

:host {
	/**
   * @prop --background: Background of the input
   *
   * @prop --color: Color of the input text
   *
   * @prop --border-radius: Radius of the input border
   * @prop --border-color: Color of the input border
   * @prop --border-width: Width of the input border
   * @prop --border-color-input-dirty: Color of the border when the input has value
   * @prop --border-color-focus: Color of the border when the input has focus
   *
   * @prop --padding-top: Top padding of the input
   * @prop --padding-right: Right padding
   * @prop --padding-bottom: Bottom padding of the input
   * @prop --padding-start: Left padding
   *
   * @prop --label-color: Color of the Label
   * @prop --label-padding-top: The Label's top padding
   * @prop --label-padding-right: The Label's right padding
   * @prop --label-padding-bottom: The Label's bottom padding
   * @prop --label-padding-left: The Label's left padding
   *
   * @prop --placeholder-color: Color of the input placeholder text
   * @prop --placeholder-opacity: Opacity of the input placeholder text
   */

	--background: #{$color-brand-lf-gray-dark};
	--color: #{$color-brand-lf-white-base};

	--border-radius: 2px;
	--border-color: #{$color-brand-lf-gray-dark};
	--border-width: 1px;
	--border-color-input-dirty: transparent;
	--border-color-focus: #{$color-brand-lf-blue-base};

	--placeholder-color: #{$color-brand-lf-text-gray-dark};
	--placeholder-opacity: 1;

	--label-color: #{$color-brand-lf-text-gray};
	--label-padding-top: 0;
	--label-padding-right: 0;
	--label-padding-bottom: 0.75rem;
	--label-padding-left: 0;

	--padding-top: 12px;
	--padding-right: 2rem;
	--padding-bottom: 12px;
	--padding-left: 16px;

	display: flex;
	flex: 1 0 auto;
	position: relative;
	align-items: center;
	justify-items: flex-start;
	padding: 0 1.25rem 1.25rem 0;
	z-index: $z-index-item-input;
}

// Native Text Input
// --------------------------------------------------
.native-input {
	background: var(--background);
	border-width: var(--border-width);
	border-color: var(--border-color);
	border-radius: var(--border-radius);
	border-style: solid;
	transition: border 0.2s linear;
	padding: var(--padding-top) var(--padding-right) var(--padding-bottom)
		var(--padding-left);
	display: inline-flex;
	flex: 1;
	outline: none;
	box-sizing: border-box;
	appearance: none;
	@include atlas-regular(var(--color), $inputFontSize);

	&::placeholder {
		@include atlas-regular(var(--placeholder-color), $inputFontSize);
		color: var(--placeholder-color);
		opacity: var(--placeholder-opacity);
	}

	&.native-input:-webkit-autofill {
		background-color: var(--background) !important;
	}

	&:invalid {
		box-shadow: none;
	}

	&::-ms-clear {
		display: none;
	}
}

// Clear Input Icon
// --------------------------------------------------
.lf-text-input--wrapper {
	position: relative;
	align-self: flex-start;
	flex-grow: 1;
}

button {
	width: 100%;
	appearance: unset;
	background: unset;
	color: unset;
	border: unset;
	padding: unset;
	font: unset;
	cursor: unset;
	outline: unset;
}

.input--inner-button {
	position: absolute;
	right: 0;
	top: 0;
	bottom: 0;
	margin: auto 0.5rem auto;
	padding: 0;
	background-position: center;
	background-color: transparent;
	background-repeat: no-repeat;
	outline: none;
	height: 1rem;
	width: 1rem;
	appearance: none;
	cursor: pointer;

	* {
		display: block;
		position: relative;
	}
}

.input--clear-icon {
		visibility: hidden;

	&:hover {
		opacity: 0.75;
	}

	&:active {
		opacity: 0.5;
	}
}

:host(.lf-text-input--has-value) .input--clear-icon {
	visibility: visible;
}


.input--visibility-icon {
	padding-right: 5px;
	opacity: 0.8;
	overflow: visible;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 80%;
	svg {
		fill: var(--color);
	}
}

// Icon Color
.native-input:-internal-autofill-selected,
.native-input:-webkit-autofill {
	& + .input--clear-icon path {
		stroke: #000;
	}
}

::-webkit-calendar-picker-indicator {
	filter: invert(1);
	position: relative;
}


// Text Invalid Styles
// --------------------------------------------------
:host(lf-text-input.lf-text-input--invalid) {
	.lf-text-input--label-wrapper {
		color: $color-brand-lf-red-dark;
	}

	.native-input {
		color: $color-brand-lf-red-dark;
		border-color: $color-brand-lf-red-dark;

		&::placeholder {
			color: $color-brand-lf-red-dark;
			opacity: 0.7;
		}
	}
}

// Text Invalid Styles Dirty
// --------------------------------------------------
:host(lf-text-input.lf-text-input--invalid.lf-text-input--has-focus) {
	.lf-text-input--label-wrapper {
		color: var(--label-color);
	}

	.native-input {
		color: var(--label-color);
		border-color: $color-brand-lf-yellow-dark;

		&::placeholder {
			color: var(--label-color);
		}
	}
}

// Input Has Focus/Value
// --------------------------------------------------
:host(.lf-text-input--has-value) .native-input {
	border-color: var(--border-color-input-dirty);
}

:host(.lf-text-input--has-focus) .native-input {
	pointer-events: none;
	border-color: var(--border-color-focus);
}

:host(.lf-text-input--has-focus) input,
:host(.lf-text-input--has-focus) a,
:host(.lf-text-input--has-focus) button {
	pointer-events: auto;
}

// Label Styles
// --------------------------------------------------
:host(lf-text-input) .lf-text-input--label-wrapper {
	@include atlas-regular(var(--label-color), 14px);
}

:host(.lf-text-input--label-position-fixed) .lf-text-input--label-wrapper {
	padding-right: 1rem;
}

:host(.lf-text-input--label-position-stacked) {
	display: flex;
	flex-direction: column;

	.lf-text-input--label-wrapper {
		align-self: flex-start;
		display: block;
		box-sizing: content-box;
		overflow: hidden;
		margin: var(--label-padding-top) var(--label-padding-right)
			var(--label-padding-bottom) var(--label-padding-left);
	}
}

:host(.lf-text-input--label-position-stacked-centered) {
	display: flex;
	flex-direction: column;

	.lf-text-input--label-wrapper {
		align-self: center;
		display: block;
		box-sizing: content-box;
		overflow: hidden;
		margin: var(--label-padding-top) var(--label-padding-right)
			var(--label-padding-bottom) var(--label-padding-left);
	}
}

// Text Disabled Styles
// --------------------------------------------------
:host(lf-text-input.lf-text-input--disabled) {
	opacity: 0.4;
}



// Input Expand Styles
// --------------------------------------------------
:host(.lf-text-input--expand-fill) .native-input {
	width: 100%;
	flex-grow: 2;
	flex-basis: 100%;
}

:host(.lf-text-input--expand-block) .native-input {
	width: initial;
}
