/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ButtonSize } from "./components/lf-button/button-size.enum";
import { ButtonContext } from "./components/lf-button/button-context.enum";
import { SignalStrength } from "./components/lf-wifi-list-2/wifi-signal-strength.enum";
export namespace Components {
    interface DesignSheet {
    }
    interface LfButton {
        "context": ButtonContext;
        "disabled"?: boolean;
        /**
          * Button Size
         */
        "size": ButtonSize;
    }
    interface LfList {
        "color": string;
        "dark": boolean;
        "dense": boolean;
        "disabled": boolean;
        "elevation": number | string;
        "height": number | string;
        "light": boolean;
        "maxHeight": number | string;
        "maxWidth": number | string;
        "minHeight": number | string;
        "minWidth": number | string;
        "outlined": boolean;
        "rounded": boolean;
        "width": number | string;
        "zebra": boolean;
    }
    interface LfListItem {
        "dark": boolean;
        "dense": boolean;
        "disabled": boolean;
        "light": boolean;
        "outlined": boolean;
    }
    interface LfSubheader {
        "dark": boolean;
        "inset": boolean;
        "light": boolean;
    }
    interface LfWifiList {
    }
    interface LfWifiList2 {
    }
    interface LfWifiListItem {
        "index"?: number;
        "networkName": string;
        "passwordProtected": boolean;
        "signalStrength": SignalStrength;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
declare global {
    interface HTMLDesignSheetElement extends Components.DesignSheet, HTMLStencilElement {
    }
    var HTMLDesignSheetElement: {
        prototype: HTMLDesignSheetElement;
        new (): HTMLDesignSheetElement;
    };
    interface HTMLLfButtonElement extends Components.LfButton, HTMLStencilElement {
    }
    var HTMLLfButtonElement: {
        prototype: HTMLLfButtonElement;
        new (): HTMLLfButtonElement;
    };
    interface HTMLLfListElement extends Components.LfList, HTMLStencilElement {
    }
    var HTMLLfListElement: {
        prototype: HTMLLfListElement;
        new (): HTMLLfListElement;
    };
    interface HTMLLfListItemElement extends Components.LfListItem, HTMLStencilElement {
    }
    var HTMLLfListItemElement: {
        prototype: HTMLLfListItemElement;
        new (): HTMLLfListItemElement;
    };
    interface HTMLLfSubheaderElement extends Components.LfSubheader, HTMLStencilElement {
    }
    var HTMLLfSubheaderElement: {
        prototype: HTMLLfSubheaderElement;
        new (): HTMLLfSubheaderElement;
    };
    interface HTMLLfWifiListElement extends Components.LfWifiList, HTMLStencilElement {
    }
    var HTMLLfWifiListElement: {
        prototype: HTMLLfWifiListElement;
        new (): HTMLLfWifiListElement;
    };
    interface HTMLLfWifiList2Element extends Components.LfWifiList2, HTMLStencilElement {
    }
    var HTMLLfWifiList2Element: {
        prototype: HTMLLfWifiList2Element;
        new (): HTMLLfWifiList2Element;
    };
    interface HTMLLfWifiListItemElement extends Components.LfWifiListItem, HTMLStencilElement {
    }
    var HTMLLfWifiListItemElement: {
        prototype: HTMLLfWifiListItemElement;
        new (): HTMLLfWifiListItemElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "design-sheet": HTMLDesignSheetElement;
        "lf-button": HTMLLfButtonElement;
        "lf-list": HTMLLfListElement;
        "lf-list-item": HTMLLfListItemElement;
        "lf-subheader": HTMLLfSubheaderElement;
        "lf-wifi-list": HTMLLfWifiListElement;
        "lf-wifi-list-2": HTMLLfWifiList2Element;
        "lf-wifi-list-item": HTMLLfWifiListItemElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface DesignSheet {
    }
    interface LfButton {
        "context"?: ButtonContext;
        "disabled"?: boolean;
        /**
          * Button Size
         */
        "size"?: ButtonSize;
    }
    interface LfList {
        "color"?: string;
        "dark"?: boolean;
        "dense"?: boolean;
        "disabled"?: boolean;
        "elevation"?: number | string;
        "height"?: number | string;
        "light"?: boolean;
        "maxHeight"?: number | string;
        "maxWidth"?: number | string;
        "minHeight"?: number | string;
        "minWidth"?: number | string;
        "outlined"?: boolean;
        "rounded"?: boolean;
        "width"?: number | string;
        "zebra"?: boolean;
    }
    interface LfListItem {
        "dark"?: boolean;
        "dense"?: boolean;
        "disabled"?: boolean;
        "light"?: boolean;
        "outlined"?: boolean;
    }
    interface LfSubheader {
        "dark"?: boolean;
        "inset"?: boolean;
        "light"?: boolean;
    }
    interface LfWifiList {
    }
    interface LfWifiList2 {
    }
    interface LfWifiListItem {
        "index"?: number;
        "networkName": string;
        "passwordProtected": boolean;
        "signalStrength": SignalStrength;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "design-sheet": DesignSheet;
        "lf-button": LfButton;
        "lf-list": LfList;
        "lf-list-item": LfListItem;
        "lf-subheader": LfSubheader;
        "lf-wifi-list": LfWifiList;
        "lf-wifi-list-2": LfWifiList2;
        "lf-wifi-list-item": LfWifiListItem;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "design-sheet": LocalJSX.DesignSheet & JSXBase.HTMLAttributes<HTMLDesignSheetElement>;
            "lf-button": LocalJSX.LfButton & JSXBase.HTMLAttributes<HTMLLfButtonElement>;
            "lf-list": LocalJSX.LfList & JSXBase.HTMLAttributes<HTMLLfListElement>;
            "lf-list-item": LocalJSX.LfListItem & JSXBase.HTMLAttributes<HTMLLfListItemElement>;
            "lf-subheader": LocalJSX.LfSubheader & JSXBase.HTMLAttributes<HTMLLfSubheaderElement>;
            "lf-wifi-list": LocalJSX.LfWifiList & JSXBase.HTMLAttributes<HTMLLfWifiListElement>;
            "lf-wifi-list-2": LocalJSX.LfWifiList2 & JSXBase.HTMLAttributes<HTMLLfWifiList2Element>;
            "lf-wifi-list-item": LocalJSX.LfWifiListItem & JSXBase.HTMLAttributes<HTMLLfWifiListItemElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
